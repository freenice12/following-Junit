package t;

public class TestCaseTest extends TestCase {

    public TestCaseTest(final String name) {
        super(name);
    }

    public static void main(final String[] args) throws Exception {
        final TestSuite suite = new TestSuite();
        suite.add(new TestCaseTest("testTemplateMethod"));
        suite.add(new TestCaseTest("testResult"));
        suite.add(new TestCaseTest("testFailedResultFormatting"));
        suite.add(new TestCaseTest("testFailedResult"));
        suite.add(new TestCaseTest("testSuite"));
        suite.run();
    }

    public void testTemplateMethod() throws Exception {
        final WasRun test = new WasRun("testMethod");
        test.run();
        assert ("setUp testMethod tearDown".equals(test.log));
    }

    public void testResult() throws Exception {
        final WasRun test = new WasRun("testMethod");
        final TestResult result = test.run();
        assert ("1 run, 0 failed".equals(result.summary()));
    }

    public void testFailedResult() throws Exception {
        final WasRun test = new WasRun("testBrokenMethod");
        final TestResult result = test.run();
        assert ("1 run, 1 failed".equals(result.summary()));
    }

    public void testFailedResultFormatting() throws Exception {
        final TestResult result = new TestResult();
        result.testStarted();
        result.testFailed();
        assert ("1 run, 1 failed".equals(result.summary()));
    }

    public void testSuite() throws Exception {
        final TestSuite suite = new TestSuite();
        suite.add(new WasRun("testMethod"));
        suite.add(new WasRun("testBrokenMethod"));
        final TestResult result = suite.run();
        assert ("2 run, 1 failed".equals(result.summary()));
    }

}
